- name: System requirements checking file 
  hosts: all
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600  # refresh cache if older than 1 hour

    - name: Upgrade all packages
      apt:
        upgrade: dist

    - name: Autoremove unnecessary packages
      apt:
        autoremove: yes
        purge: yes
    - name: Check if Docker is installed
      command: which docker
      register: docker_check
      ignore_errors: yes

    - name: Set docker_installed flag
      set_fact:
        docker_installed: "{{ docker_check.rc == 0 }}"

    - name: Install Docker if not installed
      apt:
        name:
          - docker.io
        state: present
      when: not docker_installed

    - name: Add user 'ubuntu' to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Check if Docker Compose is installed
      command: which docker-compose
      register: compose_check
      ignore_errors: yes

    - name: Install Docker Compose if not present
      apt:
        name: docker-compose
        state: present
      when: compose_check.rc != 0

    - name: Check if Nginx is installed
      command: which nginx
      register: nginx_check
      ignore_errors: yes

    - name: Install Nginx if not present
      apt:
        name: nginx
        state: present
      when: nginx_check.rc != 0

    - name: Configure NGINX reverse proxy for Yii2
      copy:
        src: ../Nginx/yii2          # relative path from playbook location to config file
        dest: /etc/nginx/sites-available/yii2
        mode: '0644'


    - name: Enable Yii2 NGINX config
      file:
        src: /etc/nginx/sites-available/yii2
        dest: /etc/nginx/sites-enabled/yii2
        state: link
        force: yes

    - name: Restart NGINX
      service:
        name: nginx
        state: restarted
        
    - name: Reboot system if Docker was just installed
      reboot:
        msg: "Reboot initiated by Ansible after Docker install"
        reboot_timeout: 300
      when: not docker_installed

    - name: Initialize Docker Swarm (if not already initialized)
      shell: |
        docker info | grep -q 'Swarm: active' || docker swarm init
      args:
        executable: /bin/bash
    
    - name: Create app directory on EC2
      file:
        path: "{{ app_dir }}"
        state: directory

    - name: Copy repo contents to EC2
      copy:
        src: "{{ playbook_dir }}/../"
        dest: "{{ app_dir }}"
        exclude: [".git", ".github"]

    - name: Deploy the app using docker stack
      shell: docker stack deploy -c {{ app_dir }}/docker-compose.yml yii2app
